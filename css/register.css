/*
 * register.css
 * This file contains styles specific to the register.html page.
 * General theme, colors, and global component styles are in style.css.
 */

/* Ensure no horizontal overflow */
html, body {
    overflow-x: hidden;
    /* Important for flexbox centering of .content-wrapper and then .container */
    height: 100%;
    margin: 0; /* Reset default body margin */
    display: flex;
    flex-direction: column;
}

/* Ensure content-wrapper occupies available space and centers its content */
.content-wrapper {
    flex-grow: 1; /* Allow it to take up available vertical space */
    display: flex;
    flex-direction: column; /* Stack children (theme switch, container) vertically */
    align-items: center; /* Center children horizontally */
    justify-content: center; /* Center children vertically */
    padding: 20px; /* Add some padding around the whole content if needed */
    box-sizing: border-box; /* Include padding in width/height calculations */
}

/* Style for the main container on the register page */
.container {
    background-color: var(--light-card-background); /* Using theme variable from style.css */
    padding: 40px; /* Increased padding for a more substantial card feel */
    border-radius: 10px; /* Slightly larger border-radius for softer edges */
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    text-align: center; /* Centers text like h1, p inside the container */
    width: 100%;
    max-width: 500px; /* Adjust max-width if you want the register form to be wider */
    border: 1px solid var(--light-border);
    transition: background-color 0.3s, border-color 0.3s, box-shadow 0.3s;

    /* Flex properties for internal layout of container children (h1, p, form, footer) */
    display: flex;
    flex-direction: column; /* Stack children vertically */
    /* Remove justify-content/align-items here if content-wrapper is already centering it
       and you want content to fill the container's width. */
    /* If you want internal elements to be centered, text-align: center; on container is often enough */
    /* Add min-height if the container seems too small without content */
    min-height: 400px; /* Example: ensure a minimum height for the card */
    position: relative; /* Needed for z-index or other positioning if desired */
    z-index: 2; /* To ensure it's above the video background */

    /* Scroll behavior for overflow, if content exceeds max-height */
    max-height: 90vh; /* IMPORTANT: Restrict max height to 90% of the viewport height */
    overflow-y: hidden; /* Add vertical scrollbar if content exceeds max-height */
}

/* Dark mode specific for this container */
body.dark-mode .container {
    background-color: var(--dark-card-background);
    border: 1px solid var(--dark-border);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);
}

/* Main Page Title (H1) inside the container */
.container h1 {
    font-family: 'Avengers', sans-serif;
    color: var(--avengers-red);
    font-size: 2.5em; /* Larger, more prominent title */
    margin-bottom: 10px; /* Space between title and description */
    text-transform: uppercase; /* Match the "REGISTER" logo feel */
    letter-spacing: 1px;
}

body.dark-mode .container h1 {
    color: var(--avengers-dark-red);
}

/* General paragraphs within the container, like "Register as a new user" */
.container p {
    font-size: 1.1em;
    margin-bottom: 20px; /* Space before the form starts */
    color: var(--light-text);
}

body.dark-mode .container p {
    color: var(--dark-text);
}


/* Specific styling for the actual register form */
/* Applying form-section styles directly to the form element */
.form-section { /* This targets the <form class="form-section"> */
    width: 100%; /* Ensures form takes full width of its container */
    max-width: 400px; /* Limit form width within the container for better aesthetics */
    margin: 20px auto; /* Center the form horizontally within the container */
    display: flex;
    flex-direction: column;
    gap: 15px; /* Spacing between input groups */
    flex-shrink: 0; /* Prevents it from shrinking if space is tight */
    padding-bottom: 0; /* No padding needed here, container padding is enough */
}

/* Input Group Styles (Explicitly defined in register.css) */
.input-group {
    margin-bottom: 0; /* Gap handles spacing between groups */
    text-align: left; /* Aligns labels and inputs to the left within their group */
}

.input-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: bold;
    color: var(--light-text);
}

body.dark-mode .input-group label {
    color: var(--dark-text);
}

.input-group input[type="text"],
.input-group input[type="password"],
.input-group input[type="email"],
.input-group select {
    width: calc(100% - 20px); /* Full width minus horizontal padding */
    padding: 12px 10px;
    border: 1px solid var(--light-border);
    border-radius: 5px;
    background-color: var(--light-input-background);
    color: var(--light-text);
    transition: background-color 0.3s, border-color 0.3s, color 0.3s;
    -webkit-appearance: none; /* Reset default browser styles for consistency */
    -moz-appearance: none;
    appearance: none;
}

body.dark-mode .input-group input,
body.dark-mode .input-group select {
    border: 1px solid var(--dark-border);
    background-color: var(--dark-input-background);
    color: var(--dark-text);
}

.input-group input:focus,
.input-group select:focus {
    outline: none;
    border-color: var(--avengers-red);
    box-shadow: 0 0 0 3px rgba(220, 53, 69, 0.2);
}

body.dark-mode .input-group input:focus,
body.dark-mode .input-group select:focus {
    border-color: var(--avengers-dark-red);
    box-shadow: 0 0 0 3px rgba(176, 0, 32, 0.3);
}

/* --- Button Styles (Explicitly defined in register.css) --- */
button[type="submit"] {
    background-color: var(--light-button-background);
    color: var(--light-button-text);
    border: none;
    padding: 12px 25px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1.1em;
    font-weight: bold;
    text-transform: uppercase;
    transition: background-color 0.3s ease;
    width: 100%; /* Make button full width of its container */
    margin-top: 5px; /* Little extra space above the button */
}

body.dark-mode button[type="submit"] {
    background-color: var(--dark-button-background);
    color: var(--dark-button-text);
}

button[type="submit"]:hover {
    background-color: #a72737; /* A darker shade for hover */
}

body.dark-mode button[type="submit"]:hover {
    background-color: #8c0019; /* A darker dark-mode shade for hover */
}

/* --- Specific styling for the "Already have an account?" link --- */
/* Target the paragraph directly, as it's a direct child of .container */
.login-link-text { /* This must match the HTML class on the <p> tag */
    margin-top: 20px;
    font-size: 0.9em;
    color: var(--light-text);
}

body.dark-mode .login-link-text {
    color: var(--dark-text);
}

.login-link-text a {
    color: var(--avengers-red);
    text-decoration: none;
    font-weight: bold;
    transition: color 0.3s;
}

body.dark-mode .login-link-text a {
    color: var(--avengers-dark-red);
}

.login-link-text a:hover {
    text-decoration: underline;
}

/* --- Footer styling specific to register page's container --- */
.container footer {
    width: 100%;
    text-align: center;
    padding-top: 20px;
    color: var(--light-text);
    border-top: 1px solid var(--light-border);
    margin-top: 30px;
}

body.dark-mode .container footer {
    color: var(--dark-text);
    border-top: 1px solid var(--dark-border);
}

/* Media Queries specific to register.css components */
@media (max-width: 600px) {
    .container {
        margin-left: 10px;
        margin-right: 10px;
        padding: 30px 20px;
        max-height: 95vh;
    }
}